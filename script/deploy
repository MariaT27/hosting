#!/bin/sh

# Выход в случае ошибки
set -e

cd "$(dirname "$0")/.."

# Для ускорения деплоя проект поступил в архиве
tar -xf deploy.tar && rm deploy.tar

# Предварительно в папке проекта должен быть
# размещен файл .env для выполнения миграций

RELEASE_DIR=$(pwd)
ROOT_DIR=$(dirname "$RELEASE_DIR")/..
LIVE_DIR=$ROOT_DIR/live
STORAGE_DIR=$ROOT_DIR/storage
UPLOADS_DIR=$ROOT_DIR/uploads
VIEWS_DIR=$STORAGE_DIR/framework/views

if [ ! -f $ROOT_DIR/.env ]; then
  echo "Can't find .env configuration file"
  exit 1
fi

# Копия проекта
# git clone --depth=1 -b master git@bitbucket.org:ivacuum/hosting.git $RELEASE_DIR

# if [ $? -ne 0 ]; then
#   echo "Cloning was not successful"
#   exit 1
# fi

# rm -rf $RELEASE_DIR/.git

# Файл настроек
ln -s $ROOT_DIR/.env $RELEASE_DIR/.env

# Общее хранилище
if [ -d $STORAGE_DIR ]; then
  rm -rf $RELEASE_DIR/storage
else
  mv $RELEASE_DIR/storage $STORAGE_DIR
fi

ln -s $STORAGE_DIR $RELEASE_DIR/storage

# Общая папка для загрузок
if [ -d $UPLOADS_DIR ]; then
  rm -rf $RELEASE_DIR/public/uploads
else
  mv $RELEASE_DIR/public/uploads $UPLOADS_DIR
fi

ln -s $UPLOADS_DIR $RELEASE_DIR/public/uploads

# Установка зависимостей
cd $RELEASE_DIR
composer install --no-dev --no-interaction --optimize-autoloader

if [ $? -ne 0 ]; then
  echo "Composer install run was not successful"
  exit 1
fi

# Миграция базы данных
php artisan migrate --force

if [ $? -ne 0 ]; then
  echo "Migration was not completed"
  exit 1
fi

php artisan config:cache
php artisan route:cache
php artisan view:cache

ln -hfs $RELEASE_DIR $LIVE_DIR

php artisan queue:restart

# На память остается всего 3 релиза
cd $ROOT_DIR/releases
rm -rf $(ls -t | tail -n +4)

# Чистка storage/framework/views
touch $VIEWS_DIR/.gitignore
find $VIEWS_DIR -mtime +1d -delete
